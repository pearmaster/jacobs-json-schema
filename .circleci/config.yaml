version: 2.1
jobs:
  build_test_3_5:
    docker:
      - image: circleci/python:3.5
    steps:
      - checkout  # checkout source code to working directory
      - run:
          command: |  # create whl and use pipenv to install dependencies
            python setup.py sdist bdist_wheel
            sudo pip install pipenv
            pipenv install coveralls unittest-xml-reporting
            pipenv install dist/jacobs_json_schema-0.1.0-py3-none-any.whl
      - run:
          command: |  # Run test suite
            mkdir -p /tmp/testresults
            pipenv run coverage run --source=jacobsjsonschema -m xmlrunner discover -o /tmp/testresults
            pipenv run coveralls
      - store_test_results:
          path: /tmp/testresults
  build_test_3_6:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout  # checkout source code to working directory
      - run:
          command: |  # create whl and use pipenv to install dependencies
            python setup.py sdist bdist_wheel
            sudo pip install pipenv
            pipenv install coveralls unittest-xml-reporting
            pipenv install dist/jacobs_json_schema-0.1.0-py3-none-any.whl
      - run:
          command: |  # Run test suite
            mkdir -p /tmp/testresults
            pipenv run coverage run --source=jacobsjsonschema -m xmlrunner discover -o /tmp/testresults
            pipenv run coveralls
      - store_test_results:
          path: /tmp/testresults
  build_test_3_7:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout  # checkout source code to working directory
      - run:
          command: |  # create whl and use pipenv to install dependencies
            python setup.py sdist bdist_wheel
            sudo pip install pipenv
            pipenv install coveralls unittest-xml-reporting
            pipenv install dist/jacobs_json_schema-0.1.0-py3-none-any.whl
      - run:
          command: |  # Run test suite
            mkdir -p /tmp/testresults
            pipenv run coverage run --source=jacobsjsonschema -m xmlrunner discover -o /tmp/testresults
            pipenv run coveralls
      - store_test_results:
          path: /tmp/testresults
  build_test_3_8:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout  # checkout source code to working directory
      - run:
          command: |  # create whl and use pipenv to install dependencies
            python setup.py sdist bdist_wheel
            sudo pip install pipenv
            pipenv install coveralls unittest-xml-reporting
            pipenv install dist/jacobs_json_schema-0.1.0-py3-none-any.whl
      - run:
          command: |  # Run test suite
            mkdir -p /tmp/testresults
            pipenv run coverage run --source=jacobsjsonschema -m xmlrunner discover -o /tmp/testresults
            pipenv run coveralls
      - store_test_results:
          path: /tmp/testresults
  build_test_3_9:
    docker:
      - image: circleci/python:3.9
    steps:
      - checkout  # checkout source code to working directory
      - run:
          command: |  # create whl and use pipenv to install dependencies
            python setup.py sdist bdist_wheel
            sudo pip install pipenv
            pipenv install coveralls unittest-xml-reporting
            pipenv install dist/jacobs_json_schema-0.1.0-py3-none-any.whl
      - run:
          command: |  # Run test suite
            mkdir -p /tmp/testresults
            pipenv run coverage run --source=jacobsjsonschema -m xmlrunner discover -o /tmp/testresults
            pipenv run coveralls
      - store_test_results:
          path: /tmp/testresults
  build_test_3_10:
    docker:
      - image: circleci/python:3.10
    steps:
      - checkout  # checkout source code to working directory
      - run:
          command: |  # create whl and use pipenv to install dependencies
            python setup.py sdist bdist_wheel
            sudo pip install pipenv
            pipenv install coveralls unittest-xml-reporting
            pipenv install dist/jacobs_json_schema-0.1.0-py3-none-any.whl
      - run:
          command: |  # Run test suite
            mkdir -p /tmp/testresults
            pipenv run coverage run --source=jacobsjsonschema -m xmlrunner discover -o /tmp/testresults
            pipenv run coveralls
      - store_test_results:
          path: /tmp/testresults
  test_pypi_publish:
    docker:
      - image: circleci/python:3
    steps:
      - checkout  # checkout source code to working directory
      - run:
          command: |  # create whl, install twine and publish to Test PyPI
            python setup.py sdist bdist_wheel
            sudo pip install pipenv
            pipenv install twine
            pipenv run twine upload --repository testpypi dist/*
  pypi_publish:
    docker:
      - image: circleci/python:3
    steps:
      - checkout  # checkout source code to working directory
      - run:
          command: |  # create whl, install twine and publish to PyPI
            python setup.py sdist bdist_wheel
            sudo pip install pipenv
            pipenv install twine
            pipenv run twine upload dist/*
workflows:
  build_test_publish:
    jobs:
      - build_test_3_5
      - build_test_3_6
      - build_test_3_7
      - build_test_3_8
      - build_test_3_9
      - build_test_3_10
      - test_pypi_publish:
          requires:
            - build_test_3_5
            - build_test_3_6
            - build_test_3_7
            - build_test_3_8
            - build_test_3_9
            - build_test_3_10
          filters:
            branches:
              only:
                - next
      - pypi_publish:
          requires:
            - build_test_3_5
            - build_test_3_6
            - build_test_3_7
            - build_test_3_8
            - build_test_3_9
            - build_test_3_10
          filters:
            branches:
              only:
                - master